@###############################################
@#
@# ROS message source code generation for ROSc
@#
@# EmPy template for generating <msg>.h files
@#
@###############################################
@# Start of Template
@#
@# Context:
@# TODO
@###############################################
/* Software License Agreement (BSD License)
 *
 * Copyright (c) 2011, Willow Garage, Inc.
 * Copyright (c) 2013, Synapticon GmbH
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided
 *    with the distribution.
 *  * Neither the name of the copyright holders nor the names of their
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * Auto-generated by genmsg_c from file @file_name_in
 *
 */
@{
#Import python modules used for building the template
import genmsg.msgs
import gencpp
import genmsg.msg_loader
import genc.generator

msg_definition = gencpp.escape_message_definition(msg_definition)
rosc_gen = genc.generator.msg_static(spec, search_path)
}@

//####################
// Message definition
//####################
/*
@(msg_definition)
*/

#ifndef @(spec.package.upper())_MESSAGE_@(spec.short_name.upper())_H
#define @(spec.package.upper())_MESSAGE_@(spec.short_name.upper())_H

//#############################
// Includes for dependencies
//#############################
@{
for field in spec.parsed_fields():
  if (not field.is_builtin):
    if (field.is_header):
      print '#include <rosc/msg/std_msgs/Header.h>'
    else:
      (package, name) = genmsg.names.package_resource_name(field.base_type)
      package = package or spec.package # convert '' to package
      print '#include <rosc/msg/%s/%s.h>'%(package, name)

##
## Define some strings which might be changed later
##
#rosc msg prefix
(package, name) = genmsg.names.package_resource_name(spec.full_name)
rosc_name_pack=package + '__' + name
rosc_pref= 'rosc_static_msg' 
rosc_usertype = rosc_pref + '_user_def'
rosc_buildup = rosc_pref + '_buildup'
rosc_padding = rosc_pref + '_padding__' + rosc_name_pack
rosc_len = rosc_pref + '_len_def__' + rosc_name_pack
}@

//##############################
// Constants
//##############################

//Not implemented yet

//##############################
// Constants2
//##############################

//Not implemented yet

//##############################
// Static Userdefinable Message
//##############################
#define @(rosc_usertype.upper())__@(rosc_name_pack)(\
    USER_TYPE@[for sizef in rosc_gen.get_static_struct_size_fields()]@[if not sizef.isdigit()],\
    @(sizef)@[end if]@[end for]\
)\
typedef @(rosc_gen.get_static_struct().replace('\n','\\\n'))@(rosc_usertype)__@(rosc_name_pack)__ ## USER_TYPE ## _t;\
uint32_t @(rosc_len)__ ## USER_TYPE[]=\
{\
    @(len(rosc_gen.get_static_struct_size_fields()))@[for sizef in rosc_gen.get_static_struct_size_fields()],\
    @(sizef)@[end for]\
};\
union\
{\
    @(rosc_usertype)__@(rosc_name_pack)__ ## USER_TYPE ## _t __padding_struct;\
    const uint8_t padding__lookup[sizeof(@(rosc_usertype)__@(rosc_name_pack)__ ## USER_TYPE ## _t)];\
}@(rosc_padding)__ ## USER_TYPE = @(rosc_gen.get_padding_init());\
uint32_t @(rosc_pref)_size_list__@(rosc_name_pack)__ ## USER_TYPE []=\
{\
    @(len(rosc_gen.get_static_in_substructure_sizes()))@[for sizef in rosc_gen.get_static_in_substructure_sizes()],\
    sizeof(@(rosc_padding)__ ## USER_TYPE.__padding_struct@(sizef))@[end for]\
}\
size_t @(rosc_pref)_memory_offsets__@(rosc_name_pack)__ ## USER_TYPE []=\
{\  
    @[for (struct, member) in rosc_gen.get_static_member_offsets()]offsetof(VARIABLE_NAME@(struct),@(member.replace('.',''))),\
    @[end for]\
}

//#################################################
// Static message buildup array
//#################################################    
@(rosc_pref)_buildup__@(rosc_name_pack)[]=
{@{rosc_gen.print_buildup_array()}@}
                               
                                    
//#################################################
// Static subscriber topics memory size list entry
//#################################################
#define @(rosc_usertype.upper())__@(rosc_name_pack)__SIZE_LIST_ENTRY(USER_TYPE)\
    @(rosc_usertype)__@(rosc_name_pack)__ ## USER_TYPE ## _t @(rosc_usertype)__@(rosc_name_pack)__ ## USER_TYPE;




           
#endif // @(spec.package.upper())_MESSAGE_@(spec.short_name.upper())_H
