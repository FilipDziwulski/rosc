#This file is used to generate the msg_strings.h and msg_strings.c
#The generation is down by the strHCgen.py python script.
#The first entry is also considered as example:

rpc_xml_tag_strings: # <- This is the variable name for the 
                     # created string variable 
                     # and the defines for the enum
                     # DO ONLY USE C CONFORM WRITINGS FOR VARIABLES!!!
  comment: #Comment what strings the array contains here 
           #Resulting comment starts with: This array contains the strings for .... 
    'standard XMLRPC tags'
  defineShort: #This specifies the short definition infront of the enum values
    'TAG'
  stringlist: {   #Strings inside the variable 
                  #If the string contains special chars like ?, write it in ''
                  #If the string can't be used as enum declaration in C, you 
                  #can specifiy a replacement for it after a : like 
                  #shown in the next variable definition                  
                  body,
                  boolean,
                  data,
                  fault,
                  h1,
                  head,
                  int,
                  member,
                  methodCall,
                  methodName,
                  methodResponse,
                  p,
                  param,
                  params,
                  string,
                  struct,
                  title,
                  value,
                  array,
              }

rpc_xml_stdtext:
  comment:
    'standard XMLRPC text pieces'
  defineShort:
    'STDTXT'
  stringlist: {
      '<?xml version=\"1.0\"?>': XML_DEF,
      Error code, 
      hasParam,
      registerPublisher,
      registerSubscriber,
      requestTopic,
      '/tcp_keepalive': TCP_KEEPALIVE,
      unregisterPublisher,
      unregisterSubscriber,
  }
  
http_header_descriptors:
  comment:
    'standard http header descriptors'
  defineShort:
    'DESC'
  stringlist: {
        Server,
        User-Agent: USER_AGENT,
        Date,
        Host,
        Content-Type: CONTENT_TYPE,
        Content-length: CONTENT_LENGTH,
        Accepted-Encoding
  }
  
http_header_stdtext:
  comment:
    'some standard values for http headers'
  defineShort:
    'VAL'
  stringlist: {
    'POST/HTTP/1.1',
    'HTTP/1.0',
    'XMLRPC ROSc-NodeLib',
    'BaseHTTP/ROSc-NodeLib',
    'text/xml',
    'OK'
  }
    